@inject globalConfig, typeName, methodName, propertyDocs, attributeName, mapHelper
angular.module('<%= globalConfig.moduleName %>').provider('<%= typeName(name) %>', function() {
  this.$get = function(%INJECTOR%) {
    function <%= typeName(name) %>(data) {
      <% _.each(function(attribute, key) { %>
        <% if (key === 'links' && attribute.type.name.match(/Links$/)) {%>
          <% _.each(function(desc, link) { %>
            <% if(!attributes[link]) {%>
              if (data.links && data.links['<%= link %>'] && data.links['<%= link %>'].url) {
                this.<%= methodName(link) %> = function() {
                  <% injector.push('$http') %>
                  return $http.get(data.links['<%= link %>'].url).then(function(response) {
                    <% var theType = typeName(desc.options.reference); injector.push(theType) %>
                    return new <%= theType %>(response.data);
                  });
                };
              }
            <% } %>
          <%}, attribute.type.attributes) %>
        <% } else { %>
          <%= propertyDocs(obj, key, attribute) %>
          <% if (attribute.type.name.match(/::/)) { %>
            // Currently the existence of this type is assumed
            <% injector.push(typeName(attribute.type.name)) %>
            this.<%= attributeName(key) %> = new <%= typeName(attribute.type.name)%>(data['<%=key%>']);
          <% } else if (attribute.type.name === 'Collection' && attribute.type.member_attribute.type.name.match(/::/)) { %>
            // Currently the existence of this type is assumed
            <% injector.push(typeName(attribute.type.member_attribute.type.name)) %>
            this.<%= attributeName(key) %> = <%= mapHelper("(data['" + key+ "'] || [])", "function(element) {" +
            "  return new " +
            typeName(attribute.type.member_attribute.type.name) +
            "(element);" +
            "}")%>;
          <% } else { %>
            this.<%= attributeName(key) %> = data['<%=key%>'];
          <% } %>
        <% } %>
      <% }, attributes) %>
    }
  };
});
